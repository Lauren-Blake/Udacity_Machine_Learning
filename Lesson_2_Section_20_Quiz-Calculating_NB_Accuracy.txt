# Lesson 2: Naive Bayes
# Section 20: Calculating Naive Bayes Accuracy

##### Define a function for running the classifier and accuracy score

def NBAccuracy(features_train, labels_train, features_test, labels_test):
    """ compute the accuracy of your Naive Bayes classifier """
    ### import the sklearn module for GaussianNB
    from sklearn.naive_bayes import GaussianNB

    ### create classifier
    clf = GaussianNB()

    clf.fit(features_train, labels_train)

    ### use the trained classifier to predict labels for the test features
    clf_pf = clf.predict(features_test)


    ### calculate and return the accuracy on the test data
    ### this is slightly different than the example, 
    ### where we just print the accuracy
    ### import an sklearn module
    from sklearn.metrics import accuracy_score
    
    accuracy = accuracy_score(labels_test, clf_pf)
    return accuracy

##### Run the function with the given data

from class_vis import prettyPicture
from prep_terrain_data import makeTerrainData
from classify import NBAccuracy

import matplotlib.pyplot as plt
import numpy as np
import pylab as pl


features_train, labels_train, features_test, labels_test = makeTerrainData()

def submitAccuracy():
    accuracy = NBAccuracy(features_train, labels_train, features_test, labels_test)
    return accuracy


##### Answer: The accuracy is 0.884. 